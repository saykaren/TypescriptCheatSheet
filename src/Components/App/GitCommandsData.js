export const GitCommandData = [
  { action: "Start tracking", command: "git init", note: "", category: "Basics"},
  { action: "Make a new file", command: "touch <filename+type>", note: "Example (touch example.html or example.js or example.css", category: "Basics"},
  { action: "Download latest changes in project", command: "git pull", note: "", category: "Basics" },
  { action: "Create new directory", command: "Mkdir <name-of-your_directory", note: "AKA file", category: "Basics"},
  { action: "Status of changes", command: "git status", note: "", category: "Basics"},
  { action: "Check a version", command: "(application) -version", note: "example: node -version or npm -version" , category: "Basics"},
  { action: "Add work from staging", command: "git add", note: "If you do git add . (with period it will add all files in staging", category: "Basics" },
  { action: "Commit Work", command: "git commit -m '<message here>'", note: "<> not needed", category: "Basics" },
  { action: "Push to Github", command: "git push origin <branchName>", note: "Never push to master you need to be on a branch and push to a branch", category: "Basics" },
  { action: "Make a file with data in it", command: "Echo 'Hello World' <filename>", note: "This will put Hello World in the filename you put", category: "Basics" },
  { action: "Create a branch", command: "git checkout -b <New_branch_name>", note: "", category: "Branching" },
  { action: "Checkout older version", command: "git checkout <sha>", note: "", category: "Branching" },
  { action: "Delete Branches", command: "git branch -d <branch_name>", note: "", category: "Branching" },
  { action: "Change head back to a given commit", command: "git reset <commit>", note: "", category: "Branching" },
  { action: "Checkout branch or main", command: "git checkout <branch or main>", note: "", category: "Branching" },
  { action: "List out branches", command: "git branch -a", note: "", category: "Branching" },
  { action: "Merge Back", command: "git checkout master git merge <branch_name>", note: "", category: "Branching" },
  { action: "Go to main directory", command: "cd ~", note: "", category: "Navigation" },
  { action: "Move to a folder", command: "cd <folder name>", note: "", category: "Navigation" },
  { action: "Go back a folder", command: "cd ..", note: "", category: "Navigation" },
  { action: "Exit", command: ".exit", note: "", category: "Navigation" },
  { action: "Check items in folder", command: "ls", note: "", category: "Navigation" },
  { action: "Recent updates", command: "git log", note: "", category: "Navigation" },
  { action: "Sha of current state", command: "git describe --always", note: "", category: "Basics" },
  { action: "Remove", command: "rm -rf <file name>", note: "", category: "Removing" },
  { action: "Kill this program", command: "<control>+C", note: "You hit those keys", category: "Removing" },
  { action: "Delete all files in folder", command: "rm -f*", note: "", category: "Removing" },
  { action: "Rename", command: "git mv <old_file_name><new_file_name>", note: "", category: "Removing" },
  { action: "Delete File", command: "git rm --cached <file_name>", note: "", category: "Removing" },
  { action: "Stash Changes", command: "git stash", note: "Bring back stash by git stash pop", category: "Removing" },
    { action: "Create App", command: "npx create-react-app <name_all_lower_case>", note: "", category: "Creation" },
  { action: "Start App", command: "yarn start or npm start ", note: "", category: "Creation" },
  { action: "Confirm Remote Setup", command: "git remove -v", note: "", category: "Remote" },
  { action: "Add Upstream", command: "git remote add upstream <link>", note: "", category: "Remote" },
  { action: "Change Origin Link", command: "git remote set-url origin <link>", note: "", category: "Remote" },
  { action: "Start", command: "git", note: "", category: "Basics" },
  { action: "Start", command: "git", note: "", category: "Basics" },
  { action: "Start", command: "git", note: "", category: "Basics" },
  { action: "Start", command: "git", note: "", category: "Basics" },
  { action: "Start", command: "git", note: "", category: "Basics" },
  { action: "Start", command: "git", note: "", category: "Basics" },
  { action: "Start", command: "git", note: "", category: "Basics" },



];

export default GitCommandData;
